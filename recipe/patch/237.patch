From b89a8d342ea64342e44aa2076d0e0101e2498f87 Mon Sep 17 00:00:00 2001
From: Matthias Diener <mdiener@illinois.edu>
Date: Tue, 13 Jul 2021 15:02:48 -0700
Subject: [PATCH 1/3] initial powerpc64 / ppc64le support

---
 setup.py            | 3 +++
 src/_vmprof.c       | 4 ++++
 src/vmprof_config.h | 2 ++
 3 files changed, 9 insertions(+)

diff --git a/setup.py b/setup.py
index c96aece2..9944e945 100644
--- a/setup.py
+++ b/setup.py
@@ -63,6 +63,9 @@ def _supported_unix():
                 libraries.append('unwind-x86')
         elif platform.machine() == 'aarch64':
             libraries.append('unwind-aarch64')
+        elif platform.machine() == 'ppc64le':
+            pass
+            #libraries.append('unwind-ppc64le')
         else:
             raise NotImplementedError("unknown platform.machine(): %s" %
                                       platform.machine())
diff --git a/src/_vmprof.c b/src/_vmprof.c
index 5a8c4519..c2d2977e 100644
--- a/src/_vmprof.c
+++ b/src/_vmprof.c
@@ -40,6 +40,8 @@ PY_EVAL_RETURN_T * vmprof_eval(PY_STACK_FRAME_T *f, int throwflag)
     register PY_STACK_FRAME_T * callee_saved asm("r4");
 #elif defined(__aarch64__)
     register PY_STACK_FRAME_T * callee_saved asm("x19");
+#elif defined(__powerpc64__)
+    register PY_STACK_FRAME_T * callee_saved asm("r3");
 #else
 #    error "platform not supported"
 #endif
@@ -51,6 +53,8 @@ PY_EVAL_RETURN_T * vmprof_eval(PY_STACK_FRAME_T *f, int throwflag)
         "mov %1, %0\t\n"
 #elif defined(__arm__) || defined(__aarch64__)
 	"mov %1, %0\t\n"
+#elif defined(__powerpc64__)
+	"addi %1, %0, 0\t\n"
 #else
 #    error "platform not supported"
 #endif
diff --git a/src/vmprof_config.h b/src/vmprof_config.h
index 69a1b585..3649810e 100644
--- a/src/vmprof_config.h
+++ b/src/vmprof_config.h
@@ -26,6 +26,8 @@
   #define PC_FROM_UCONTEXT uc_mcontext.psw.addr
 #elif defined(__aarch64__)
   #define PC_FROM_UCONTEXT uc_mcontext.pc
+#elif defined(__powerpc64__)
+  #define PC_FROM_UCONTEXT uc_mcontext.gp_regs[32]
 #else
   /* linux, gnuc */
   #define PC_FROM_UCONTEXT uc_mcontext.gregs[REG_RIP]

From aa02cc788200b34ec73ebb3afd032746f71aaf06 Mon Sep 17 00:00:00 2001
From: Matthias Diener <mdiener@illinois.edu>
Date: Sat, 17 Jul 2021 07:33:14 -0700
Subject: [PATCH 2/3] correct library

---
 setup.py | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/setup.py b/setup.py
index 9944e945..c969bad0 100644
--- a/setup.py
+++ b/setup.py
@@ -64,8 +64,7 @@ def _supported_unix():
         elif platform.machine() == 'aarch64':
             libraries.append('unwind-aarch64')
         elif platform.machine() == 'ppc64le':
-            pass
-            #libraries.append('unwind-ppc64le')
+            libraries.append('unwind-ppc64')
         else:
             raise NotImplementedError("unknown platform.machine(): %s" %
                                       platform.machine())

From 30c9fd07ddfdd90772e7363e3e51c0c9b00b95aa Mon Sep 17 00:00:00 2001
From: Matthias Diener <mdiener@illinois.edu>
Date: Sat, 17 Jul 2021 08:24:37 -0700
Subject: [PATCH 3/3] use symbolic name for reg

---
 src/vmprof_config.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/vmprof_config.h b/src/vmprof_config.h
index 3649810e..35d62512 100644
--- a/src/vmprof_config.h
+++ b/src/vmprof_config.h
@@ -27,7 +27,7 @@
 #elif defined(__aarch64__)
   #define PC_FROM_UCONTEXT uc_mcontext.pc
 #elif defined(__powerpc64__)
-  #define PC_FROM_UCONTEXT uc_mcontext.gp_regs[32]
+  #define PC_FROM_UCONTEXT uc_mcontext.gp_regs[PT_NIP]
 #else
   /* linux, gnuc */
   #define PC_FROM_UCONTEXT uc_mcontext.gregs[REG_RIP]
